# 프로젝트 개요 설명

WebOS

browser App

/

WebApp

/

1. Enact browser 보안 취약점 진단
보안 취약점을 드러내는 것!!!
보안 취약점 발굴!!!

2. 

/

보안 취약점
- Security
- Privacy

보안 리스크 모니터링 툴 개발
- 셀레니움 API 활용 (자동화 테스트 수행)
  사용자가 브라우저에서 입력하는 것을 시뮬레이션
- 보안 취약점을 드러내는 시나리오를 실행
  -> 스크린샷, 로그, 파일 출력 

로컬

/

스탠포드 

9/24 강의
10/3 강의
10/8 강의 (SOP, Same Origin Policy)
10/29 강의 (TLS) - 직접적인 연관은 없음
12/5 강의 

=> 스터디 진행

/

라즈베리파이 - 마지막 최종

/

크로미움 가지고 구글이 만들어서 배포 - 크롬

크로미움 직접 빌드 및 실행 => 해야될 상황이 있으면...
(컴퓨터가 좋아야 됨...) 아무래도 안하지 않을까?

/

크롬 개발자도구
Disable Javascript
우클릭 금지 해제 

/

site isolation
=> 크롬 65

---

Enact browser - 크로미움 기반

/

크로미움 버전 갭! (구글은 6주 마다 업데이트 하지만...)

LG 1년 마다 업데이트

/

1. 버전 갭으로 인한 보안 취약점
2. 키워드, 플래그 (flag)

--disable-web-security <- OS 에서 default 로 되어있음
: SOP 비활성화
콜스(CORS)가 침해당했다...?

iframe , crossorigin 일 때
logic 검사 => eval?


iframe -> 크로스 공격 -> 보안 공격 성공 | 자바스크립트
CORS
CO 친구

--no-sandbox
: 프로세스간 통신 가능

--disable-site-isolation-trials
: 크롬 66(?) iframe 을 다른 프로세스로 -> 프로세스간 통신을 막으니까 안전하겠군


/

크로니움 72 기준
의 enack browser 
-> site-isolation 꺼져있음

flag 꺼지고 켜지고의 차이

/

11월 말까지는
그 뒤의 flag 들을 가지고 실험 
(앞에것은 지원가능, 그럴듯한 것을 만들 수 있음)

/

보안 취약점 해결
- flag 를 넣어서 해결했다 (정도)
- 

/

Runtime Flag 랑
크로미움 버전 차이
=> 

/

11월 부터는
자동화 탐지 툴 개발
=> 

/



